groups:
  - name: system_alerts
    rules:
      # High CPU usage
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 80% for more than 5 minutes on {{ $labels.instance }}"

      # High memory usage
      - alert: HighMemoryUsage
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 85% for more than 5 minutes on {{ $labels.instance }}"

      # High disk usage
      - alert: HighDiskUsage
        expr: (node_filesystem_size_bytes - node_filesystem_avail_bytes) / node_filesystem_size_bytes * 100 > 90
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "High disk usage detected"
          description: "Disk usage is above 90% on {{ $labels.instance }} for filesystem {{ $labels.mountpoint }}"

      # High load average
      - alert: HighLoadAverage
        expr: node_load15 > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High load average detected"
          description: "15-minute load average is {{ $value }} on {{ $labels.instance }}"

  - name: application_alerts
    rules:
      # Application down
      - alert: ApplicationDown
        expr: up{job="app-health"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Application is down"
          description: "Application health check is failing on {{ $labels.instance }}"

      # Database connectivity issues
      - alert: DatabaseConnectivityIssue
        expr: up{job="database-health"} == 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Database connectivity issue"
          description: "Database health check is failing for more than 2 minutes"

      # Redis connectivity issues
      - alert: RedisConnectivityIssue
        expr: up{job="redis-health"} == 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Redis connectivity issue"
          description: "Redis health check is failing for more than 2 minutes"

      # GraphQL service issues
      - alert: GraphQLServiceIssue
        expr: up{job="graphql-health"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "GraphQL service issue"
          description: "GraphQL health check is failing for more than 2 minutes"

      # High error rate
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) * 100 > 10
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }}% for more than 5 minutes"

      # Slow response times
      - alert: SlowResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Slow response times detected"
          description: "95th percentile response time is {{ $value }}s for more than 5 minutes"

  - name: database_alerts
    rules:
      # PostgreSQL down
      - alert: PostgreSQLDown
        expr: pg_up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL database is not responding"

      # High database connections
      - alert: HighDatabaseConnections
        expr: pg_stat_activity_count / pg_settings_max_connections * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High database connection usage"
          description: "Database connection usage is above 80%"

      # Slow queries
      - alert: SlowQueries
        expr: rate(pg_stat_activity_max_tx_duration[5m]) > 30
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Slow database queries detected"
          description: "Long-running queries detected in PostgreSQL"

      # Database replication lag
      - alert: DatabaseReplicationLag
        expr: pg_stat_replication_lag_seconds > 60
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Database replication lag"
          description: "Replication lag is {{ $value }} seconds"

  - name: redis_alerts
    rules:
      # Redis down
      - alert: RedisDown
        expr: redis_up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Redis is down"
          description: "Redis instance is not responding"

      # High Redis memory usage
      - alert: HighRedisMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 90
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High Redis memory usage"
          description: "Redis memory usage is above 90%"

      # Redis key eviction
      - alert: RedisKeyEviction
        expr: rate(redis_evicted_keys_total[5m]) > 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Redis key eviction detected"
          description: "Redis is evicting keys due to memory pressure"

      # High Redis command latency
      - alert: HighRedisLatency
        expr: redis_commands_duration_seconds_total / redis_commands_processed_total > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High Redis command latency"
          description: "Average Redis command latency is above 100ms"

  - name: container_alerts
    rules:
      # Container down
      - alert: ContainerDown
        expr: absent(container_last_seen) or time() - container_last_seen > 300
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Container is down"
          description: "Container {{ $labels.name }} has been down for more than 5 minutes"

      # High container CPU usage
      - alert: HighContainerCPU
        expr: rate(container_cpu_usage_seconds_total[5m]) * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High container CPU usage"
          description: "Container {{ $labels.name }} CPU usage is above 80%"

      # High container memory usage
      - alert: HighContainerMemory
        expr: container_memory_usage_bytes / container_spec_memory_limit_bytes * 100 > 90
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High container memory usage"
          description: "Container {{ $labels.name }} memory usage is above 90%"

      # Container restart loop
      - alert: ContainerRestartLoop
        expr: rate(container_start_time_seconds[15m]) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Container restart loop detected"
          description: "Container {{ $labels.name }} is restarting frequently"

  - name: external_services_alerts
    rules:
      # External service down
      - alert: ExternalServiceDown
        expr: up{job="external-services"} == 0
        for: 3m
        labels:
          severity: warning
        annotations:
          summary: "External service is down"
          description: "External service {{ $labels.instance }} is not responding"

      # MinIO storage service down
      - alert: MinIODown
        expr: up{job="minio-health"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "MinIO storage service is down"
          description: "MinIO object storage is not responding"

      # Email service down
      - alert: EmailServiceDown
        expr: up{job="mailhog-health"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Email service is down"
          description: "Mailhog email service is not responding"